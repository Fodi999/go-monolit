package handlers

import (
	"encoding/json"

	"github.com/gofiber/fiber/v2"
	"monolith/menu-service/database"
	"monolith/menu-service/models"
	"monolith/menu-service/utils"
)

// üì¶ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –±–ª—é–¥–∞ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
func GetAllMenuItems(c *fiber.Ctx) error {
	items, err := utils.GetAllMenuItems(database.DB)
	if err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–ª—é–¥–∞",
		})
	}
	if items == nil {
		items = []models.MenuItem{}
	}
	return c.JSON(items)
}
// üìÇ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
func GetPublishedMenuItemsWithCategory(c *fiber.Ctx) error {
	items, err := utils.GetAllMenuItemsWithCategory(database.DB)
	if err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏",
		})
	}

	// –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ
	var published []models.MenuItemWithCategory
	for _, item := range items {
		if item.Published {
			published = append(published, item)
		}
	}

	return c.JSON(published)
}

// üìÇ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –±–ª—é–¥–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (JOIN)
func GetAllMenuItemsWithCategory(c *fiber.Ctx) error {
	items, err := utils.GetAllMenuItemsWithCategory(database.DB)
	if err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–ª—é–¥–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏",
		})
	}
	if items == nil {
		items = []models.MenuItemWithCategory{}
	}
	return c.JSON(items)
}

// üì¶ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞
func GetPublishedMenuItems(c *fiber.Ctx) error {
	items, err := utils.GetPublishedMenuItems(database.DB)
	if err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞",
		})
	}
	if items == nil {
		items = []models.MenuItem{}
	}
	return c.JSON(items)
}

// üìä –ü–æ–ª—É—á–∏—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ü–∏—é –ø–æ –±–ª—é–¥—É
func GetCalculationByMenuItemID(c *fiber.Ctx) error {
	menuItemID := c.Params("menuItemId")
	calc, err := utils.GetCalculationByMenuItemID(database.DB, menuItemID)
	if err != nil {
		return c.Status(fiber.StatusNotFound).JSON(fiber.Map{
			"error": "–ö–∞–ª—å–∫—É–ª—è—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
		})
	}
	return c.JSON(calc)
}

// üçΩ –ü–æ–ª—É—á–∏—Ç—å –±–ª—é–¥–æ –ø–æ ID
func GetMenuItemByID(c *fiber.Ctx) error {
	id := c.Params("id")
	item, err := utils.GetMenuItemByID(database.DB, id)
	if err != nil {
		return c.Status(fiber.StatusNotFound).JSON(fiber.Map{
			"error": "–ë–ª—é–¥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
		})
	}
	return c.JSON(item)
}

// üçΩ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –±–ª—é–¥–æ
func CreateMenuItem(c *fiber.Ctx) error {
	var item models.MenuItem
	if err := c.BodyParser(&item); err != nil {
		return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{
			"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞",
		})
	}
	item.Margin = item.Price - item.CostPrice
	if err := utils.CreateMenuItem(database.DB, &item); err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –±–ª—é–¥–æ",
		})
	}
	return c.Status(fiber.StatusCreated).JSON(item)
}

// üõ† –û–±–Ω–æ–≤–∏—Ç—å –±–ª—é–¥–æ
func UpdateMenuItem(c *fiber.Ctx) error {
	id := c.Params("id")
	var item models.MenuItem
	if err := json.Unmarshal(c.Body(), &item); err != nil {
		return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{
			"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞",
		})
	}
	item.Margin = item.Price - item.CostPrice
	if err := utils.UpdateMenuItem(database.DB, id, &item); err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –±–ª—é–¥–æ",
		})
	}
	return c.JSON(item)
}

// üîÑ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å (–∏–ª–∏ —Å–Ω—è—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é) –±–ª—é–¥–∞
func PublishMenuItem(c *fiber.Ctx) error {
	id := c.Params("id")
	if err := utils.TogglePublishMenuItem(database.DB, id); err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –±–ª—é–¥–∞",
		})
	}
	return c.SendStatus(fiber.StatusOK)
}

// ‚ùå –£–¥–∞–ª–∏—Ç—å –±–ª—é–¥–æ
func DeleteMenuItem(c *fiber.Ctx) error {
	id := c.Params("id")
	if err := utils.DeleteMenuItem(database.DB, id); err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –±–ª—é–¥–æ",
		})
	}
	return c.JSON(fiber.Map{"message": "–ë–ª—é–¥–æ —É–¥–∞–ª–µ–Ω–æ"})
}

// üì¶ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Å–æ —Å–∫–ª–∞–¥–∞
func GetInventoryItems(c *fiber.Ctx) error {
	items, err := utils.GetAllInventoryItems(database.DB)
	if err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–∫–ª–∞–¥—Å–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã",
		})
	}
	if items == nil {
		items = []models.InventoryItem{}
	}
	return c.JSON(items)
}

// ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –Ω–∞ —Å–∫–ª–∞–¥
func CreateInventoryItem(c *fiber.Ctx) error {
	var item models.InventoryItem
	if err := c.BodyParser(&item); err != nil {
		return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{
			"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞",
		})
	}
	if err := utils.CreateInventoryItem(database.DB, &item); err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –Ω–∞ —Å–∫–ª–∞–¥",
		})
	}
	return c.Status(fiber.StatusCreated).JSON(item)
}

// üõ† –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –Ω–∞ —Å–∫–ª–∞–¥–µ
func UpdateInventoryItem(c *fiber.Ctx) error {
	id := c.Params("id")
	var item models.InventoryItem
	if err := c.BodyParser(&item); err != nil {
		return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{
			"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞",
		})
	}
	if err := utils.UpdateInventoryItem(database.DB, id, &item); err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç",
		})
	}
	return c.JSON(item)
}

// üóë –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç —Å–æ —Å–∫–ª–∞–¥–∞
func DeleteInventoryItem(c *fiber.Ctx) error {
	id := c.Params("id")
	if err := utils.DeleteInventoryItem(database.DB, id); err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç —Å–æ —Å–∫–ª–∞–¥–∞",
		})
	}
	return c.JSON(fiber.Map{"message": "–ü—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª—ë–Ω"})
}

// üìä –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ü–∏–æ–Ω–Ω—É—é –∫–∞—Ä—Ç—É –±–ª—é–¥–∞
func CreateCalculationForDish(c *fiber.Ctx) error {
	var calc models.Calculation
	if err := c.BodyParser(&calc); err != nil {
		return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{
			"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞",
		})
	}
	if err := utils.SaveDishCalculation(database.DB, &calc); err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ü–∏—é",
		})
	}
	return c.Status(fiber.StatusCreated).JSON(fiber.Map{"message": "–ö–∞–ª—å–∫—É–ª—è—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"})
}







