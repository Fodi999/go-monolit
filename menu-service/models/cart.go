package models

import "gorm.io/gorm"

// üõí –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
type Cart struct {
	gorm.Model
	UserID string     `gorm:"not null;index" json:"userId"` // –∏–Ω–¥–µ–∫—Å –ø–æ UserID
	Items  []CartItem `gorm:"constraint:OnUpdate:CASCADE,OnDelete:CASCADE;" json:"items"`
}

// üì¶ –ü–æ–∑–∏—Ü–∏—è –≤ –∫–æ—Ä–∑–∏–Ω–µ
// üì¶ –ü–æ–∑–∏—Ü–∏—è –≤ –∫–æ—Ä–∑–∏–Ω–µ
type CartItem struct {
    gorm.Model
    CartID     uint    `gorm:"not null;index" json:"CartID"`   // —Ç–µ–ø–µ—Ä—å –æ—Ç–¥–∞—ë–º CartID
    MenuItemID string  `gorm:"not null"      json:"menuItemId"`
    Name       string  `gorm:"not null"      json:"name"`
    Quantity   int     `gorm:"not null"      json:"quantity"`
    Price      float64 `gorm:"not null"      json:"price"`
	ImageURL    string  `gorm:"-" json:"imageUrl"` // <‚Äî –Ω–æ–≤–æ–µ –ø–æ–ª–µ, –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ cart_items
}


// üßæ –ó–∞–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
type Order struct {
	gorm.Model
	UserID     string      `gorm:"not null;index" json:"userId"`
	CartID     uint        `gorm:"index" json:"cartId"`
	Items      []OrderItem `gorm:"constraint:OnUpdate:CASCADE,OnDelete:CASCADE;" json:"items"`
	TotalPrice float64     `gorm:"not null" json:"totalPrice"`
	Status     string      `gorm:"type:varchar(50);default:'pending'" json:"status"`
}

// üßæ –ü–æ–∑–∏—Ü–∏—è –≤ –∑–∞–∫–∞–∑–µ
type OrderItem struct {
	gorm.Model
	OrderID    uint    `gorm:"not null;index" json:"orderId"`
	MenuItemID string  `gorm:"not null" json:"menuItemId"`
	Name       string  `gorm:"not null" json:"name"`
	Quantity   int     `gorm:"not null" json:"quantity"`
	Price      float64 `gorm:"not null" json:"price"`
}

